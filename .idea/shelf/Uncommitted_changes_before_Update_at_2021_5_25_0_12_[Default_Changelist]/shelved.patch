Index: assemble_test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random\r\n\r\nimport strassen_mut\r\nimport standard_mut\r\nimport adapted_mut\r\nimport plotGraph\r\n\r\n\r\ndef generate_test(filename, n):\r\n    file2write = open(filename, 'w')\r\n    for i in range(n):\r\n        for j in range(n - 1):\r\n            line = '%d ' % (random.randint(0, 9))\r\n            file2write.write(line)\r\n        line = '%d\\n' % (random.randint(0, 9))\r\n        file2write.write(line)\r\n    file2write.close()\r\n\r\n\r\ndef main():\r\n    data_n = list()\r\n    # data_strassen_time = list()\r\n    data_standard_time = list()\r\n    data_adapted_time = list()\r\n    multi_number = 250\r\n    boundary = 32\r\n    for i in range(1, 20):\r\n        data_n.append(i * multi_number)\r\n        generate_test('test\\\\generate_test_%d.txt' %\r\n\r\n                      (i * multi_number), i * multi_number)\r\n        testfile = 'test\\\\generate_test_%d.txt' % (i * multi_number)\r\n        # strassen_time = strassen_mut.strassen_solver(testfile, testfile)\r\n        standard_time = standard_mut.standard_solver(testfile, testfile)\r\n        adapted_time = adapted_mut.adapted_solver(testfile, testfile, boundary)\r\n        # print('>> N is:', i * multi_number, '\\nstandard_time:', standard_time, '\\nstrassen_time:', strassen_time,\r\n        # '\\nadapted_time:', adapted_time)\r\n        print('>> N is:', i * multi_number, '\\nstandard_time:', standard_time, '\\nadapted_time:', adapted_time)\r\n        data_standard_time.append(standard_time)\r\n        # data_strassen_time.append(strassen_time)\r\n        data_adapted_time.append(adapted_time)\r\n    write_data('data\\\\dataset_standard.txt', data_n, data_standard_time, 1)\r\n    # write_data('data\\\\dataset_strassen.txt', data_n, data_strassen_time, 0)\r\n    write_data('data\\\\dataset_adapted.txt', data_n, data_adapted_time, 2)\r\n    # plotGraph.plot_triplex(['data\\\\dataset_standard.txt', 'data\\\\dataset_strassen.txt', 'data\\\\dataset_adapted.txt'],\r\n    #                        ['standard', 'strassen', 'adapted-%s' % boundary])\r\n    plotGraph.plot_triplex(['data\\\\dataset_standard.txt', 'data\\\\dataset_adapted.txt'],\r\n                           ['standard', 'adapted-%s' % boundary])\r\n\r\n\r\ndef write_data(filename, data_n, data_times, method_type):\r\n    file2write = open(filename, 'w')\r\n    # print('data length:', len(data_n), 'equals', len(data_times))\r\n    # print('data_n:\\n', data_n)\r\n    # print('data_times\\n:', data_times)\r\n    data_length = len(data_n)\r\n    file2write.write('%d %d\\n' % (data_length, method_type))\r\n    for i in range(data_length - 1):\r\n        file2write.write('%d ' % data_n[i])\r\n    file2write.write('%d\\n' % data_n[data_length - 1])\r\n    for i in range(data_length - 1):\r\n        file2write.write('%f ' % data_times[i])\r\n    file2write.write('%f' % data_times[data_length - 1])\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assemble_test.py b/assemble_test.py
--- a/assemble_test.py	(revision f3a7fcc4f74f01a299dc1202a91562530a24386e)
+++ b/assemble_test.py	(date 1621872670178)
@@ -23,12 +23,10 @@
     data_standard_time = list()
     data_adapted_time = list()
     multi_number = 250
-    boundary = 32
+    boundary = 4
     for i in range(1, 20):
         data_n.append(i * multi_number)
-        generate_test('test\\generate_test_%d.txt' %
-
-                      (i * multi_number), i * multi_number)
+        generate_test('test\\generate_test_%d.txt' % (i * multi_number), i * multi_number)
         testfile = 'test\\generate_test_%d.txt' % (i * multi_number)
         # strassen_time = strassen_mut.strassen_solver(testfile, testfile)
         standard_time = standard_mut.standard_solver(testfile, testfile)
